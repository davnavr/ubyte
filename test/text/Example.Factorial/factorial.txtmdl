.module Factorial
.format 0 0
.version 1

.identifier @id_namespace Example
.identifier @id_class Factorial
.identifier @id_entry_point main
.identifier @id_factorial factorial

.signature @sig_int type s32
.signature @sig_main method (@sig_int) ()
.signature @sig_factorial method (@sig_int) (@sig_int)

.code @code_factorial {
    .arguments ($a0)
    .locals ($l_one)
    .block $ENTRY {
        $l_one = const.s s32 1
        %t_zero = const.zero s32
        br.eq $a0 %t_zero then $RETURN_EARLY else $CHECK_ONE
    }
    .block $CHECK_ONE {
        br.eq $a0 $l_one then $RETURN_EARLY else $NEXT
    }
    .block $NEXT {
        %t0 = sub @sig_int $a0 $l_one
        %t1 = call @method_factorial (%t0)
        %t_result = mul @sig_int $a0 %t1
        ret %t_result
    }
    .block $RETURN_EARLY {
        ret $l_one
    }
}

.code @code_main {
    .block $ENTRY {
        %t0 = const.s s32 9
        (%t1) = call @method_factorial (%t0)
        ret %t1
    }
}

.namespace @namespace {
    .name @id_namespace
}

.type @class_program public {
    .name @id_class
    .namespace @namespace

    .method @method_main public {
        .name @id_entry_point
        .signature @sig_main
        .body defined @code_main
    }

    .method @method_factorial public {
        .name @id_factorial
        .signature @sig_factorial
        .body defined @code_factorial
    }
}

.entrypoint @method_main
