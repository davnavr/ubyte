{
  "name": "MiddleC",
  "scopeName": "source.mdlc",
  "fileTypes": [
    "mdlc"
  ],
  "foldingStartMarker": "\\{",
  "foldingStopMarker": "\\}",
  "patterns": [
    {
      "include": "#declaration"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "match": "(^\\s+)?(\\/\\/.*)",
          "captures": {
            "2": {
              "name": "comment.line.double-slash.middlec"
            }
          }
        },
        {
          "name": "comment.block.middlec",
          "begin": "\\/\\*",
          "end": "\\*\\/"
        }
      ]
    },
    "declaration": {
      "patterns": [
        {
          "include": "#namespace-declaration"
        },
        {
          "include": "#type-declaration"
        },
        {
          "include": "#comment"
        },
        {
          "match": "\\b(using)\\s+(\\w+)(::(\\w+))*\\s*\\;",
          "captures": {
            "1": {
              "name": "keyword.other.middlec"
            },
            "2": {
              "name": "entity.name.namespace.middlec"
            },
            "4": {
              "name": "entity.name.namespace.middlec"
            }
          }
        }
      ]
    },
    "namespace-declaration": {
      "begin": "\\b(namespace)\\s+(\\w+)(::(\\w+))*\\s*\\{",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.middlec"
        },
        "2": {
          "name": "entity.name.namespace.middlec"
        },
        "4": {
          "name": "entity.name.namespace.middlec"
        }
      },
      "end": "\\}",
      "patterns": [
        {
          "include": "#declaration"
        }
      ]
    },
    "type": {
      "patterns": [
        {
          "match": "((char|s|u|f)(32|64))|([su](8|16))|bool",
          "name": "storage.type.middlec"
        }
      ]
    },
    "type-declaration": {
      "begin": "\\b(type)\\s+([a-zA-Z0-9]\\w*)(\\s+(abstract|inheritable|public|private))*",
      "beginCaptures": {
        "1": {
          "name": "storage.type.class.middlec"
        },
        "2": {
          "name": "entity.name.type.middlec"
        },
        "3": {
          "name": "storage.modifier.middlec"
        }
      },
      "end": "\\}",
      "patterns": [
        {
          "include": "#type-declaration"
        },
        {
          "include": "#comment"
        },
        {
          "begin": "\\b(method)\\s+([a-zA-Z0-9]\\w*)(\\s+(entrypoint|instance|abstract|virtual|public|private))*",
          "beginCaptures": {
            "1": {
              "name": "storage.type.function.middlec"
            },
            "2": {
              "name": "entity.name.function.middlec"
            },
            "4": {
              "name": "storage.modifier.middlec"
            }
          },
          "end": "\\}",
          "patterns": [
            {
              "include": "#method-parameters"
            },
            {
              "include": "#method-return-types"
            },
            {
              "begin": "(external)\\s*\\{",
              "beginCaptures": {
                "1": {
                  "name": "storage.modifier.middlec"
                }
              },
              "end": "(^|;|\\s+)(?=\\})",
              "patterns": [
                {
                  "include": "#literal-string"
                }
              ]
            },
            {
              "include": "#block"
            }
          ]
        },
        {
          "begin": "\\b(field)\\s+([a-zA-Z0-9]\\w*)(\\s+(public|private|mutable|static))*",
          "beginCaptures": {
            "1": {
              "name": "storage.type.var.middlec"
            },
            "2": {
              "name": "entity.name.field.middlec"
            },
            "4": {
              "name": "storage.modifier.middlec"
            }
          },
          "end": "\\;",
          "patterns": [
            {
              "include": "#type"
            },
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "block": {
      "begin": "\\s*\\{",
      "end": "(^|;|\\s+)(?=\\})",
      "patterns": [
        {
          "include": "#statement"
        },
        {
          "include": "#comment"
        }
      ]
    },
    "method-parameters": {
      "begin": "\\(",
      "end": "\\)",
      "patterns": [
        {
          "match": "(?![\\,\\(])\\s*([a-zA-Z0-9]\\w*)",
          "captures": {
            "2": {
              "name": "variable.parameter.middlec"
            }
          }
        },
        {
          "include": "#type"
        },
        {
          "include": "#comment"
        }
      ]
    },
    "method-return-types": {
      "begin": "(\\-\\>)\\s+\\(",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.middlec"
        }
      },
      "end": "\\)",
      "patterns": [
        {
          "include": "#type"
        },
        {
          "include": "#comment"
        }
      ]
    },
    "literal-string": {
      "patterns": [
        {
          "match": "(\"(.|(\\\\([nt])))*\")",
          "captures": {
            "1": {
              "name": "string.quoted.double.middlec"
            },
            "3": {
              "name": "constant.character.escape.middlec"
            }
          }
        }
      ]
    },
    "literal-integer": {
      "patterns": [
        {
          "name": "constant.numeric.middlec",
          "match": "(0x[0-9_A-F]+)|(0b[01]+)|([0-9_]+)"
        }
      ]
    },
    "expression": {
      "patterns": [
        {
          "include": "#literal-string"
        },
        {
          "include": "#literal-integer"
        },
        {
          "include": "#expression-surrounded"
        },
        {
          "match": "true|false",
          "name": "constant.language.middlec"
        },
        {
          "include": "#comment"
        }
      ]
    },
    "expression-surrounded": {
      "begin": "\\(\\s*",
      "end": "\\s*\\)",
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "statement": {
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "include": "#comment"
        },
        {
          "begin": "(return)(\\s+|(?=\\;))",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.middlec"
            }
          },
          "end": "\\;",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "(let|var)\\s+([a-zA-Z0-9]\\w*)",
          "beginCaptures": {
            "1": {
              "name": "storage.modifier.middlec"
            },
            "2": {
              "name": "variable.other.middlec"
            }
          },
          "end": "\\;",
          "patterns": [
            {
              "include": "#type"
            },
            {
              "include": "#expression"
            }
          ]
        },
        {
          "match": "\\;",
          "name": "punctuation.terminator.middlec"
        },
        {
          "begin": "(if)\\s",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.middlec"
            }
          },
          "end": "\\}",
          "patterns": [
            {
              "include": "#expression-surrounded"
            },
            {
              "include": "#block"
            }
          ]
        },
        {
          "begin": "(while)\\s",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.middlec"
            }
          },
          "end": "\\}",
          "patterns": [
            {
              "include": "#expression-surrounded"
            },
            {
              "include": "#block"
            }
          ]
        }
      ]
    }
  }
}
